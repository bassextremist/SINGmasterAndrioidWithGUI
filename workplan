
-------------------------------------------
WORKPLAN:



0.5) reset PitchExtractor.detectedPitchArray on press of record button

0.6) assure correct sequence of pitch values in array DetectedPitchArray()


1) recorder 

- Find a way to play in android  raw audio in byte array ( byte []) . Each 2 consecutive bytes make on sample.
in PCM format, 16-bit, sample rate 8000.

byte [] is part of the recorded audio: bg.singmaster.backend.PitchExtractor.mDetectedPitchArray  

- Develop it as separate android app
- integrate in SINGmaster and put logic in new class AudioPlayer


1.5) AudioPlayer.play() tone called on OnPLayListener
where to put recorded buffers

on cliCK clean contour from before

2) test under different processors. 
Use logic from singMaster and put in com.kamenâ€¦ 

prepare code to count time. 
take from bg.singmaster.backend.AudioProcessor.AudioProcessingThread
- first see problem with timing, not reset after each BufferLength.

how much Mhz are needed to ensure realtime recording with at most 3 seconds lag? 

- test with Yin instead. 

3) visualization of contour does not completed. in OnPLayListener.

4) play buttons on left pane
playback of example sounds. 

5) no hopping of windows . add hops 

5.5) employ mechanism to manage thread numbers and restrict memory size

6) each exercise to be stored as a textFile which can be loaded in a separate class ExerciseLoader. It will be used in OnRecordListener()

7) increase and test different buffer sizes. small buffer sizes might mean chances of not smooth reading
